{
  "$id": "https://raw.githubusercontent.com/cyentific-rni/cacao-json-schemas/working/schemas/data-types/variable-dictionary.json",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "variable-dictionary",
  "description": "Variables can be defined and then used as the playbook is executed. Variables are stored in a 'dictionary' where the key is the name of the variable and the value is a 'variable' data type. Variables can represent stateful elements that may need to be captured to allow for the successful execution of the playbook. All playbook variables are mutable unless identified as a constant. \n\nThe scope of a variable is determined by where the variable is declared. A variable may be defined globally for the entire playbook or locally within a workflow step. Variables are scoped to the object they are defined in, and any object that is used or referenced by that object. A specific variable can only be defined once, however, a variable can be assigned and used in the object where it is defined or in any object used or referenced by that object (e.g., a playbook variable can be assigned at the playbook level but also reassigned a different value within a workflow step). \n\nVariables are referenced by using the key name from the dictionary with a suffix (keyword) of ':value'. For example, if you had a variable in the dictionary called '__ip_addresses__', one could reference this and use it in a playbook by using '__ip_addresses__:value'. Variables MAY be passed to and from external playbooks provided that system supports passing of arguments when the system function is invoked or returns its results. \n\nThe 'variable' data type captures variable information and uses the JSON object type [RFC8259] for serialization.",
  "type": "object",
  "unevaluatedProperties": false,
  "patternProperties": {
    "^__[a-zA-Z_][a-zA-Z0-9_-]{0,199}__$": {
      "allOf": [
        {
          "properties": {
            "type": {
              "type": "string",
              "description": "The type of variable being used. The value for this property SHOULD come from the 'variable-type-ov' vocabulary."
            },
            "description": {
              "type": "string",
              "description": "An optional detailed description of this variable."
            },
            "value": {
              "type": ["string","null"],
              "description": "The value of the variable represented by a JSON string. The value MAY be populated with a string value (or number encoded as a string), an empty string '', or with the special JSON NULL value. \n\nNOTE: An empty string is NOT equivalent to a JSON NULL value. An empty string means the value is known to be empty. A value of NULL means the value is unknown or undefined."
            },
            "constant": {
              "type": "boolean",
              "description": "Is this variable immutable or mutable? If true, the variable is immutable and MUST NOT be changed. If false, the variable is mutable and can be updated later on in the playbook. The default value is 'false'. If this property is not present then the value is 'false'."
            },
            "external": {
              "type": "boolean",
              "description": "This property only applies to playbook scoped variables. When set to 'true' the variable declaration defines that the variable's initial value is passed into the playbook from a calling context. When set to 'false' or omitted, the variable is defined within the playbook."
            }
          }
        }
      ],
      "required": ["type"]
    }
  }
}